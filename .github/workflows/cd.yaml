name: Infrastructure CD

on:
  push:
    branches:
      [master]
  pull_request:
  workflow_run:
    workflows:
      - Golden image CI
    types:
      - completed
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  infrastructure-cd:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.flag == 'true') ||
      github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Set up provisioning tool
        uses: hashicorp/setup-terraform@v3
      - name: Initialize provisioning tool
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init
      - name: Plan infrastructure changes
        env:
          OCI_TENANCY_OCID: ${{ vars.OCI_TENANCY_OCID }}
          OCI_USER_OCID: ${{ vars.OCI_USER_OCID }}
          OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
          OCI_FINGERPRINT: ${{ vars.OCI_FINGERPRINT }}
          OCI_REGION: ${{ vars.OCI_REGION }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          OCI_INSTANCES_SSH_PUBLIC_KEY: ${{ vars.OCI_INSTANCES_SSH_PUBLIC_KEY }}
          TF_VAR_KEY_VALUE_STORE_PASSWORD: ${{ secrets.KEY_VALUE_STORE_PASSWORD }}
        run: |
          echo "${CERTIFICATE}" > ./certificates/cert.pem
          echo "${PRIVATE_KEY}" > ./certificates/key.pem
          echo -n "${OCI_INSTANCES_SSH_PUBLIC_KEY}" > ./certificates/ssh-key-2024-03-16.key.pub
          echo -n "${OCI_PRIVATE_KEY}" > ./certificates/mtweeman@gmail.com_2024-03-02T19_23_13.049Z.pem
          terraform plan \
          -input=false
      - name: Provision infrastructure
        if: |
          (github.ref == 'refs/heads/master' && github.event_name == 'push') ||
          github.event_name == 'workflow_dispatch'
        id: provisioning-infrastructure
        env:
          OCI_TENANCY_OCID: ${{ vars.OCI_TENANCY_OCID }}
          OCI_USER_OCID: ${{ vars.OCI_USER_OCID }}
          OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
          OCI_FINGERPRINT: ${{ vars.OCI_FINGERPRINT }}
          OCI_REGION: ${{ vars.OCI_REGION }}
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          OCI_INSTANCES_SSH_PUBLIC_KEY: ${{ vars.OCI_INSTANCES_SSH_PUBLIC_KEY }}
          TF_VAR_KEY_VALUE_STORE_PASSWORD: ${{ secrets.KEY_VALUE_STORE_PASSWORD }}
        run: |
          echo "${CERTIFICATE}" > ./certificates/cert.pem
          echo "${PRIVATE_KEY}" > ./certificates/key.pem
          echo -n "${OCI_INSTANCES_SSH_PUBLIC_KEY}" > ./certificates/ssh-key-2024-03-16.key.pub
          echo -n "${OCI_PRIVATE_KEY}" > ./certificates/mtweeman@gmail.com_2024-03-02T19_23_13.049Z.pem
          terraform apply \
          -auto-approve \
          -input=false
      - name: Commit imported variables
        if: steps.provisioning-infrastructure.conclusion == 'success'
        run:
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add machine-images/imported-vars.pkr.hcl
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: steps.provisioning-infrastructure.conclusion == 'success'
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
